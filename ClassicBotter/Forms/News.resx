<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGDAAAAEAIADPBAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAYAAAAGAgGAAAA4Hc9+AAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAEZElEQVRIS8VV+09b
        ZRje36Bya1dOT0/vPewGZeIo5bLK0GlUnBluGmDQek9MNMbELEHNgMGoRuNc4hiwch0BWWFlCtmmTidD
        rgMmxks0XudkzEuMMXl8368UKHTBX4w/PP1Ovq/nfb73ed73Petksw3/Jf5HAsuydSVi7S9/dxliEugZ
        RivBIiAvrlbIJoI4WzoXZ7xvsa+KtYpAb7JBodWUshGKmkLYsAiDg2CP3jNGVpsqLhKJY2BQrCgCPd1A
        kYzY4H0IGaF65Iaa4A41wN3fCNepY/AMtKBwKAhX3zGxx8jm89ONyOx8A2qmC5JsgsHiCMcjLBFQcElv
        hJqbDW1jFZTgm8gd64V7JIjs0V64Lvbgwe+H8fifn6NgZgCu4R6xnz1K53TmHO7Cra9WwGgw00U5Zliu
        RQKJNLRaVFgOPofETj+SGiuR9m4Tto/0IvPDTuycHoDv2jTKf7mE4h9HkTP0NrI+7hZrxnutcJ4JIP2j
        DqSX7IFeZ4DeGs5CELA0sk6Bo6QI8R11SGqqRuLxamiba7Ht/Al4Rvuw7+okfPMzKCOCR65fxgNfnoeb
        CLIudCH9bAu2nm1F2gftyAi+hZStty1IZScC+kmWjdiYlwdTmx/rO/yQ2v3Qd7yC9a2HYDt5BLu/voDy
        a1Mo/XkCpVcZkyifu4T8sVNIHTyOtDPNAs7BAFI5i7r9JBVVGUm1jln0pFuKKwu7J95ByfwUin8YQfFP
        Y4vYOTMopPJQQAY/F0yehho6iniSUttSCw1BG6hB3IlDUJ9/AkaSXJjM5STbHNBpJaTfdw+8V8bh+/Uy
        fHNT8JLmj/02i3s/O4ds0jrvkyByCZFVR5kyAcuZ1FSFm9tqYKp8FlarGu4NIRETEAxMkiQh6ykffL/P
        ooxkYLDue769iNzhk+LmHPx2ymIbGZ/AgQMHoaE1rqUG8uEKOJzpkBTzYtNF9YFMzktaPe7wvwzvX1+g
        jDTnLFh3NpqDM/LHQ9hC2sc1HICGCBKaqSAoE3V7HpW6QnGWOjqagFglWhXyZFd3fZjkCpHMT+NOKtOc
        hSzYB1PPYSRQ0KRANeJJGrWokJpUofKMHhfRBAQDZZFMBNYtadg70o/yP2bhJT92UVnmUENxJiyXrq0O
        iUTAptqfLIVCTSrKfXkswioCccB+ULOkFuxAyTdD5MmnePg79oH0H+9DxvttSGyoxC0dtTC/+DSsZpLW
        bBV1vzJWTAKZhpSoLI0EV3kJvNensY8ajOveM9aHTf31uClQBfm1/XBsdgpTRbnHiHUDgoWbEEkymZ5/
        4AU8+vdXuIv6wUMm67tfh/boS7C73WJ+RcZCLMQmIIjbiI8JkSUruL/tCPbOTYjRoWmnZiq8GzJNXnHO
        3wL6v2FhwC3HDQki4NRZAqu6CUXnupA23gNbaRGMkmmVqbGwJoEASaDTydi8Ix8ZFc/AwF8zNjXGjVfi
        XxEYyBNhIptJJcyznoPHMnUl1pYo8syVJSRZ+9ZLsOEfhE822Xe0VwcAAAAASUVORK5CYII=
</value>
  </data>
</root>